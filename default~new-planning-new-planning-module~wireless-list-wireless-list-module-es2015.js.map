{"version":3,"sources":["./src/app/form/CalculateForm.ts","./src/app/new-planning/new-planning-routing.module.ts","./src/app/new-planning/new-planning.component.ts","./src/app/new-planning/new-planning.component.html","./src/app/new-planning/new-planning.module.ts","./src/app/site/task-form.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAO,MAAM,aAAa;IAA1B;QAEE,cAAS,GAAW,IAAI,CAAC;QACzB,aAAQ,GAAW,IAAI,CAAC;QACxB,eAAU,GAAW,IAAI,CAAC;QAC1B,YAAO,GAAW,IAAI,CAAC;QACvB,aAAQ,GAAW,IAAI,CAAC;QACxB,qBAAqB;QACrB,cAAS,GAAW,IAAI,CAAC;QACzB,aAAQ,GAAW,IAAI,CAAC;QACxB,cAAS,GAAW,IAAI,CAAC;QACzB,SAAI,GAAW,IAAI,CAAC;QACpB,cAAS,GAAW,IAAI,CAAC;QACzB,gBAAW,GAAW,IAAI,CAAC;QAC3B,UAAK,GAAW,IAAI,CAAC;QACrB,WAAM,GAAW,IAAI,CAAC;QACtB,aAAQ,GAAW,IAAI,CAAC;QACxB,WAAM,GAAW,IAAI,CAAC;QACtB,oBAAe,GAAW,CAAC,CAAC;QAC5B,iBAAY,GAAW,IAAI,CAAC;QAC5B,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAW,IAAI,CAAC;QAC7B,kBAAa,GAAW,IAAI,CAAC;QAC7B,cAAS,GAAW,IAAI,CAAC;QACzB,cAAS,GAAW,IAAI,CAAC;QACzB,mBAAc,GAAG,GAAG,CAAC;QACrB,oBAAoB;QACpB,iBAAY,GAAW,IAAI,CAAC;QAC5B,yBAAoB,GAAW,CAAC,CAAC;QACjC,qBAAgB,GAAW,CAAC,CAAC;QAC7B,cAAS,GAAW,IAAI,CAAC;QACzB,cAAS,GAAW,IAAI,CAAC;QACzB,kBAAa,GAAG,KAAK,CAAC;QACtB,cAAS,GAAW,IAAI,CAAC;QACzB,oBAAe,GAAG,KAAK,CAAC;QACxB,oBAAe,GAAW,IAAI,CAAC;QAC/B,eAAU,GAAY,KAAK,CAAC;QAC5B,kBAAa,GAAW,IAAI,CAAC;QAC7B,gBAAW,GAAY,KAAK,CAAC;QAC7B,mBAAc,GAAW,IAAI,CAAC;QAC9B,sBAAiB,GAAY,KAAK,CAAC;QACnC,yBAAoB,GAAW,IAAI,CAAC;QACpC,qBAAgB,GAAY,KAAK,CAAC;QAClC,wBAAmB,GAAW,IAAI,CAAC;QACnC,4BAA4B;QAC5B,iCAAiC;QACjC,gCAAgC;QAChC,UAAK,GAAW,IAAI,CAAC;QACrB,aAAQ,GAAW,IAAI,CAAC;QACxB,oBAAe,GAAW,IAAI,CAAC;QAC/B,aAAQ,GAAW,IAAI,CAAC;QACxB,iBAAY,GAAW,IAAI,CAAC;QAC5B,kBAAa,GAAW,IAAI,CAAC;QAE7B,yBAAyB;QACzB,wBAAwB;QACxB,uBAAuB;QACvB,yBAAyB;QACzB,sBAAsB;QACtB,uBAAuB;QACvB,4BAA4B;QAC5B,wBAAwB;QACxB,uBAAuB;QACvB,wBAAwB;QACxB,mBAAmB;QACnB,wBAAwB;QACxB,0BAA0B;QAC1B,oBAAoB;QACpB,qBAAqB;QACrB,uBAAuB;QACvB,qBAAqB;QACrB,8BAA8B;QAC9B,2BAA2B;QAC3B,8BAA8B;QAC9B,4BAA4B;QAC5B,4BAA4B;QAC5B,wBAAwB;QACxB,wBAAwB;QACxB,6BAA6B;QAC7B,2BAA2B;QAC3B,2BAA2B;QAC3B,mCAAmC;QACnC,+BAA+B;QAC/B,wBAAwB;QACxB,uBAAuB;QACvB,YAAY;QACZ,0CAA0C;QAC1C,wCAAwC;QACxC,sCAAsC;QACtC,wCAAwC;QACxC,+CAA+C;QAC/C,0CAA0C;QAC1C,wCAAwC;QACxC,0CAA0C;QAC1C,gCAAgC;QAChC,0CAA0C;QAC1C,8CAA8C;QAC9C,kCAAkC;QAClC,oCAAoC;QACpC,wCAAwC;QACxC,oCAAoC;QACpC,sDAAsD;QACtD,gDAAgD;QAChD,sDAAsD;QACtD,kDAAkD;QAClD,kDAAkD;QAClD,0CAA0C;QAC1C,0CAA0C;QAC1C,oDAAoD;QACpD,6CAA6C;QAC7C,gDAAgD;QAChD,gEAAgE;QAChE,wDAAwD;QACxD,0CAA0C;QAC1C,0CAA0C;QAC1C,IAAI;IAEN,CAAC;CAAA;;;;;;;;;;;;;ACrHD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACS;;;AAEhE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4EAAoB,EAAE;CAC9C,CAAC;AAMK,MAAM,wBAAwB;;uGAAxB,wBAAwB;0KAAxB,wBAAwB,kBAH1B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,wBAAwB,uFAFzB,4DAAY;6FAEX,wBAAwB;cAJpC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEY;AAGhB;AAE6C;;;;;;;;;;;;ICOrF,sEACE;IAAA,uDACF;;IAAA,4DAAM;;IADJ,0DACF;IADE,6JACF;;;IAHF,0EACE;IAAA,wHACE;IAEJ,4DAAM;;;IAHC,0DAAgC;IAAhC,iGAAgC;;;IAuBzC,0EACI;IAAA,uDACJ;;IAAA,4DAAM;;IADF,0DACJ;IADI,6JACJ;;;IAUE,sEACE;IAAA,uDACF;;IAAA,4DAAM;;IADJ,0DACF;IADE,4JACF;;;IAEE,uDACF;;;IADE,6JACF;;;IANF,0EACE;IAAA,wHACE;IAEF,oNACE;IAEJ,4DAAM;;;;IANC,0DAAkG;IAAlG,wRAAkG;;ADnC5G,MAAM,oBAAoB;IAE/B,YACU,MAAc,EACd,WAAwB,EACxB,SAAoB,EACpB,IAAgB,EAChB,eAAgC,EACR,IAAI;QAL5B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAW;QACpB,SAAI,GAAJ,IAAI,CAAY;QAChB,oBAAe,GAAf,eAAe,CAAiB;QACR,SAAI,GAAJ,IAAI;QAKtC,kBAAa,GAAkB,IAAI,iEAAa,EAAE,CAAC;QAGnD,eAAU,GAAG,KAAK,CAAC;QAPf,cAAc,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACxC,CAAC;IAQH,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACzD,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;QAE1D,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;gBACrD,yDAAU,CAAC,QAAQ;aACpB,CAAC;SACH,CAAC,CAAC;QAEH,MAAM,aAAa,GAAgB,CAAC,OAAkB,EAA2B,EAAE;YACjF,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAEzC,IAAI,KAAK,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE;gBACjD,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;aAC/B;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,0DAAW,EAAE;YACxB,MAAM,EAAE,IAAI,0DAAW,EAAE;YACzB,QAAQ,EAAE,IAAI,0DAAW,EAAE;SAC5B,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,UAAU,CAAC,KAAK;QACd,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACzD,CAAC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,EAAE;QACA,MAAM,KAAK,GAAiC,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;QAC3H,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YACjB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;SACjB;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO;SACR;QACD,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YACpD,OAAO;SACR;QACD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACxC,cAAc,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxD,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAChD,CAAC;;wFAjFU,oBAAoB,gtBAQrB,wEAAe;oGARd,oBAAoB;QCdjC,qEAAI;QAAA,0FACF;QAAA,0EACI;QAAA,4EAAmB;QAAA,yFAAU;QAAA,4DAAS;QAC1C,4DAAO;QACT,4DAAK;QACL,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,qEACE;QAAA,wEAAe;QAAA,0FAAK;QAAA,4DAAK;QACzB,yEAEI;QAAA,4EACA;QADgC,yMAAyC;QAAzE,4DACA;QAAA,kHACE;QAIN,4DAAK;QACP,4DAAK;QAaL,sEACE;QAAA,yEAAe;QAAA,0FAAK;QAAA,4DAAK;QACzB,sEACE;QAAA,4EACA;QADmB,oJAAU,sBAAkB,IAAC;QAAhD,4DACA;QAAA,2EAAmB;QAAA,uFAAO;QAAA,4DAAO;QACjC,kHACI;QAEN,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,yEAAe;QAAA,oFAAI;QAAA,4DAAK;QACxB,yEACE;QAAA,wEAAM;QAAA,6EAA4H;QAAzF,sMAAiC;QAApE,4DAA4H;QAAA,wEAAE;QAAA,4DAAO;QAC3I,wEAAM;QAAA,6EAA8H;QAA3F,uMAAkC;QAArE,4DAA8H;QAAA,wEAAE;QAAA,4DAAO;QAC7I,wEAAM;QAAA,6EAAkI;QAA/F,yMAAoC;QAAvE,4DAAkI;QAAA,wEAAE;QAAA,4DAAO;QACjJ,kHACE;QAOJ,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,yEAAe;QAAA,oFAAI;QAAA,4DAAK;QACxB,sEACE;QAAA,uFACE;QADe,yNAA0C;QACzD,wFAA4B;QAAA,8DAAE;QAAA,4DAAmB;QACjD,wFAA4B;QAAA,8DAAE;QAAA,4DAAmB;QACjD,wFAA4B;QAAA,gEAAI;QAAA,4DAAmB;QACrD,4DAAkB;QACpB,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACR,2EACE;QAAA,yEAA4C;QAAf,wIAAS,QAAI,IAAC;QAAC,wEAAE;QAAA,4DAAI;QACpD,4DAAM;QACR,4DAAM;;QA/DM,2DAAuB;QAAvB,oFAAuB;QAES,0DAAyC;QAAzC,+FAAyC;QACpE,0DAAgE;QAAhE,sIAAgE;QAwBlE,0DAAkB;QAAlB,gFAAkB;QAOR,0DAAuB;QAAvB,oFAAuB;QACG,0DAAiC;QAAjC,4FAAiC;QACjC,0DAAkC;QAAlC,6FAAkC;QAClC,0DAAoC;QAApC,+FAAoC;QACxE,0DAAgF;QAAhF,6LAAgF;QAapE,0DAA0C;QAA1C,qGAA0C;;6FD/CxD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;sBASI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEtB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACiB;AACjB;AAC0B;AAChB;AACe;AACjB;AACW;AACZ;;AAkB/C,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAfnB;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,qFAAqB;YACrB,oEAAa;YACb,qFAAwB;YACxB,4DAAY;YACZ,sEAAc;YACd,mEAAe;SAChB;mIAKU,iBAAiB,mBAJb,4EAAoB,aAVjC,4DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,qFAAqB;QACrB,oEAAa;QACb,qFAAwB;QACxB,4DAAY;QACZ,sEAAc;QACd,mEAAe,aAIP,4EAAoB;6FAEnB,iBAAiB;cAhB7B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,kEAAmB;oBACnB,qFAAqB;oBACrB,oEAAa;oBACb,qFAAwB;oBACxB,4DAAY;oBACZ,sEAAc;oBACd,mEAAe;iBAChB;gBACD,YAAY,EAAE,CAAC,4EAAoB,CAAC;gBACpC,eAAe,EAAE,CAAC,4EAAoB,CAAC;gBACvC,OAAO,EAAE,CAAC,4EAAoB,CAAC;aAChC;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAA2C;;AAMpC,MAAM,eAAe;IAE1B,gBAAgB,CAAC;;8EAFN,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"default~new-planning-new-planning-module~wireless-list-wireless-list-module-es2015.js","sourcesContent":["export class CalculateForm {\n\n  sessionid: string = null;\n  taskName: string = null;\n  totalRound: number = null;\n  mapName: string = null;\n  mapImage: string = null;\n  // createTime = null;\n  crossover: number = null;\n  mutation: number = null;\n  iteration: number = null;\n  seed: number = null;\n  defaultBs: string = null;\n  candidateBs: string = null;\n  width: number = null;\n  height: number = null;\n  altitude: number = null;\n  zValue: string = null;\n  pathLossModelId: number = 0;\n  ueCoordinate: string = null;\n  useUeCoordinate: number = null;\n  powerMaxRange: number = null;\n  powerMinRange: number = null;\n  beamMaxId: number = null;\n  beamMinId: number = null;\n  objectiveIndex = '0';\n  // threshold = null;\n  obstacleInfo: string = null;\n  availableNewBsNumber: number = 0;\n  addFixedBsNumber: number = 0;\n  bandwidth: number = null;\n  Frequency: number = null;\n  isAverageSinr = false;\n  sinrRatio: number = null;\n  isAvgThroughput = false;\n  throughputRatio: number = null;\n  isCoverage: boolean = false;\n  coverageRatio: number = null;\n  isUeAvgSinr: boolean = false;\n  ueAvgSinrRatio: number = null;\n  isUeAvgThroughput: boolean = false;\n  ueAvgThroughputRatio: number = null;\n  isUeTpByDistance: boolean = false;\n  ueTpByDistanceRatio: number = null;\n  // modelname: string = null;\n  // distanceFactor: number = null;\n  // contantFactor: number = null;\n  mctsC: number = null;\n  mctsMimo: number = null;\n  mctsTemperature: number = null;\n  mctsTime: number = null;\n  mctsTestTime: number = null;\n  mctsTotalTime: number = null;\n\n  // constructor(options: {\n  //   sessionid?: string,\n  //   taskName?: string,\n  //   totalRound?: number,\n  //   mapName?: string,\n  //   mapImage?: string,\n  //   // createTime?: string,\n  //   crossover?: number,\n  //   mutation?: number,\n  //   iteration?: number,\n  //   seed?: number,\n  //   defaultBs?: string,\n  //   candidateBs?: string,\n  //   width?: number,\n  //   height?: number,\n  //   altitude?: number,\n  //   zValue?: string,\n  //   pathLossModelId?: number,\n  //   ueCoordinate?: string,\n  //   useUeCoordinate?: number,\n  //   powerMaxRange?: number,\n  //   powerMinRange?: number,\n  //   beamMaxId?: number,\n  //   beamMinId?: number,\n  //   objectiveIndex?: number,\n  //   // threshold?: number,\n  //   obstacleInfo?: string,\n  //   availableNewBsNumber?: number,\n  //   addFixedBsNumber?: number,\n  //   bandwidth?: number,\n  //   Frequency?: number\n  // } = {}) {\n  //     this.sessionid = options.sessionid;\n  //     this.taskName = options.taskName;\n  //     this.mapName = options.mapName;\n  //     this.mapImage = options.mapImage;\n  //     // this.createTime = options.createTime;\n  //     this.crossover = options.crossover;\n  //     this.mutation = options.mutation;\n  //     this.iteration = options.iteration;\n  //     this.seed = options.seed;\n  //     this.defaultBs = options.defaultBs;\n  //     this.candidateBs = options.candidateBs;\n  //     this.width = options.width;\n  //     this.height = options.height;\n  //     this.altitude = options.altitude;\n  //     this.zValue = options.zValue;\n  //     this.pathLossModelId = options.pathLossModelId;\n  //     this.ueCoordinate = options.ueCoordinate;\n  //     this.useUeCoordinate = options.useUeCoordinate;\n  //     this.powerMaxRange = options.powerMaxRange;\n  //     this.powerMinRange = options.powerMinRange;\n  //     this.beamMaxId = options.beamMaxId;\n  //     this.beamMinId = options.beamMinId;\n  //     this.objectiveIndex = options.objectiveIndex;\n  //     // this.threshold = options.threshold;\n  //     this.obstacleInfo = options.obstacleInfo;\n  //     this.availableNewBsNumber = options.availableNewBsNumber;\n  //     this.addFixedBsNumber = options.addFixedBsNumber;\n  //     this.bandwidth = options.bandwidth;\n  //     this.Frequency = options.Frequency;\n  // }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewPlanningComponent } from './new-planning.component';\n\nconst routes: Routes = [\n  { path: '', component: NewPlanningComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewPlanningRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { TaskFormService } from '../site/task-form.service';\nimport { CalculateForm } from '../form/CalculateForm';\nimport { AuthService } from '../service/auth.service';\nimport { FormControl, FormGroup, Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n@Component({\n  selector: 'app-new-planning',\n  templateUrl: './new-planning.component.html',\n  styleUrls: ['./new-planning.component.scss']\n})\nexport class NewPlanningComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private matDialog: MatDialog,\n    private http: HttpClient,\n    private taskFormService: TaskFormService,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      sessionStorage.removeItem('sessionStorage');\n      this.timeInterval = data.timeInterval;\n    }\n\n  calculateForm: CalculateForm = new CalculateForm();\n  formGroup: FormGroup;\n  sizeGroup: FormGroup;\n  showImgMsg = false;\n  timeInterval;\n\n  get taskName() { return this.formGroup.get('taskName'); }\n  get width() { return this.sizeGroup.get('width'); }\n  get height() { return this.sizeGroup.get('height'); }\n  get altitude() { return this.sizeGroup.get('altitude'); }\n\n  ngOnInit() {\n    this.calculateForm.sessionid = this.authService.userToken;\n\n    this.formGroup = new FormGroup({\n      taskName: new FormControl(this.calculateForm.taskName, [\n        Validators.required\n      ])\n    });\n\n    const sizeValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n      const width = control.get('width');\n      const height = control.get('height');\n      const altitude = control.get('altitude');\n      \n      if (width.valid && height.valid && altitude.valid) {\n        return null;\n      } else {\n        return { sizeRevealed: true };\n      }\n    };\n\n    this.sizeGroup = new FormGroup({\n      width: new FormControl(),\n      height: new FormControl(),\n      altitude: new FormControl()\n    }, { validators: sizeValidator });\n  }\n\n  fileChange(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      this.calculateForm.mapImage = reader.result.toString();\n    };\n    this.calculateForm.mapName = file.name;\n    this.showImgMsg = false;\n  }\n\n  ok() {\n    const input: NodeListOf<HTMLInputElement> = document.querySelector('.modalContent').querySelectorAll('input[type=\"text\"]');\n    for (let i = 0; i < input.length; i++) {\n      input[i].focus();\n      input[i].blur();\n    }\n    if (this.calculateForm.mapName == null) {\n      this.showImgMsg = true;\n      return;\n    }\n    if (this.formGroup.invalid || this.sizeGroup.invalid) {\n      return;\n    }\n    window.clearInterval(this.timeInterval);\n    sessionStorage.setItem('calculateForm', JSON.stringify(this.calculateForm));\n    this.taskFormService.calculateForm = this.calculateForm;\n    this.matDialog.closeAll();\n    this.router.navigate(['/site/site-planning']);\n  }\n\n}\n","<h3>新專案規劃\n  <span class=\"example-button-row\">\n      <button mat-button>匯入舊檔(.csv)</button>\n  </span>\n</h3>\n<div class=\"modalContent\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"th\">規劃案名稱</td>\n        <td [formGroup]=\"formGroup\">\n          \n            <input type=\"text\" class=\"w100\" [(ngModel)]=\"this.calculateForm.taskName\" formControlName=\"taskName\" required >\n            <div *ngIf=\"taskName.invalid && (taskName.dirty || taskName.touched)\" class=\"alert alert-danger\">\n              <div *ngIf=\"taskName.errors.required\">\n                {{ 'field.required' | translate }}\n              </div>\n            </div>\n        </td>\n      </tr>\n      <!--<tr>\n        <td class=\"th\">規劃目標</td>\n        <td>\n          <mat-radio-group aria-label=\"Select an option\">\n            <mat-radio-button value=\"1\">UE 平均 SINR 最大</mat-radio-button>\n            <mat-radio-button value=\"2\">UE 覆蓋範圍最大</mat-radio-button>\n            <mat-radio-button value=\"3\">UE 平均下行 Throughput 最大</mat-radio-button>\n            <mat-radio-button value=\"4\">場域平均 SINR 最大</mat-radio-button>\n            <mat-radio-button value=\"5\">場域覆蓋範圍最大</mat-radio-button>\n          </mat-radio-group>\n        </td>\n      </tr>-->\n      <tr>\n        <td class=\"th\">場域平面圖</td>\n        <td>\n          <input type=\"file\" (change)=\"fileChange($event)\" accept=\"image/jpeg,image/png,image/jpg\" >\n          <span class=\"note\">圖檔限制...</span>\n          <div *ngIf=\"showImgMsg\" class=\"alert alert-danger\">\n              {{ 'image.required' | translate }}\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"th\">場域尺寸</td>\n        <td class=\"size\" [formGroup]=\"sizeGroup\">\n          <span><input type=\"text\" placeholder=\"長\" [(ngModel)]=\"calculateForm.width\" formControlName=\"width\" required pattern=\"[1-9][0-9]*\">公尺</span>\n          <span><input type=\"text\" placeholder=\"寬\" [(ngModel)]=\"calculateForm.height\" formControlName=\"height\" required pattern=\"[1-9][0-9]*\">公尺</span>\n          <span><input type=\"text\" placeholder=\"高\" [(ngModel)]=\"calculateForm.altitude\" formControlName=\"altitude\" required pattern=\"[1-9][0-9]*\">公尺</span>\n          <div *ngIf=\"sizeGroup.errors?.sizeRevealed && (sizeGroup.touched || sizeGroup.dirty)\" class=\"alert alert-danger\">\n            <div *ngIf=\"width.errors?.pattern || height.errors?.pattern || altitude.errors?.pattern; else required\">\n              {{ 'numeric.enter' | translate }}\n            </div>\n            <ng-template #required>\n              {{ 'field.required' | translate }}\n            </ng-template>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"th\">網路種類</td>\n        <td>\n          <mat-radio-group [(ngModel)]=\"calculateForm.objectiveIndex\" aria-label=\"Select an option\">\n            <mat-radio-button value=\"0\">4G</mat-radio-button>\n            <mat-radio-button value=\"1\">5G</mat-radio-button>\n            <mat-radio-button value=\"2\">Wifi</mat-radio-button>\n          </mat-radio-group>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"modalFooter\">\n    <a href=\"javascript:void(0)\" (click)=\"ok()\">確定</a>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewPlanningComponent } from './new-planning.component';\nimport { RouterModule } from '@angular/router';\nimport { NewPlanningRoutingModule } from './new-planning-routing.module';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    NewPlanningRoutingModule,\n    RouterModule,\n    MatRadioModule,\n    TranslateModule\n  ],\n  declarations: [NewPlanningComponent],\n  entryComponents: [NewPlanningComponent],\n  exports: [NewPlanningComponent]\n})\nexport class NewPlanningModule { }\n","import { Injectable } from '@angular/core';\nimport { CalculateForm } from '../form/CalculateForm';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskFormService {\n\n  constructor() { }\n\n  calculateForm: CalculateForm;\n\n}\n"],"sourceRoot":"webpack:///"}