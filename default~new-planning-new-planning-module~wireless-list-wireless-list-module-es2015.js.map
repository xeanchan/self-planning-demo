{"version":3,"sources":["./src/app/form/CalculateForm.ts","./src/app/new-planning/new-planning-routing.module.ts","./src/app/new-planning/new-planning.component.ts","./src/app/new-planning/new-planning.component.html","./src/app/new-planning/new-planning.module.ts","./src/app/site/task-form.service.ts"],"names":[],"mappings":"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","file":"default~new-planning-new-planning-module~wireless-list-wireless-list-module-es2015.js","sourcesContent":["export class CalculateForm {\n\n  sessionid = null;\n  taskName = null;\n  totalRound = null;\n  mapName = null;\n  mapImage = null;\n  createTime = null;\n  crossover = null;\n  mutation = null;\n  iteration = null;\n  seed = '1';\n  defaultBs = null;\n  candidateBs = null;\n  width = null;\n  height = null;\n  altitude = null;\n  zValue = null;\n  pathLossModelId = null;\n  ueCoordinate = null;\n  useUeCoordinate = null;\n  powerMaxRange = null;\n  powerMinRange = null;\n  beamMaxId = null;\n  beamMinId = null;\n  objectiveIndex = null;\n  threshold = null;\n  obstacleInfo = null;\n  availableNewBsNumber = null;\n  addFixedBsNumber = null;\n  bandwidth = null;\n  Frequency = null;\n  isAverageSinr = false;\n  sinrRatio = null;\n  isAvgThroughput = false;\n  throughputRatio = null;\n  isCoverage = false;\n  coverageRatio = null;\n  isUeAvgSinr = false;\n  ueAvgSinrRatio = null;\n  isUeAvgThroughput = false;\n  ueAvgThroughputRatio = null;\n  isUeTpByDistance = false;\n  ueTpByDistanceRatio = false;\n\n  // constructor(options: {\n  //   sessionid?: string,\n  //   taskName?: string,\n  //   totalRound?: string,\n  //   mapName?: string,\n  //   mapImage?: string,\n  //   createTime?: string,\n  //   crossover?: string,\n  //   mutation?: string,\n  //   iteration?: string,\n  //   seed?: string,\n  //   defaultBs?: string,\n  //   candidateBs?: string,\n  //   width?: string,\n  //   height?: string,\n  //   altitude?: string,\n  //   zValue?: string,\n  //   pathLossModelId?: string,\n  //   ueCoordinate?: string,\n  //   useUeCoordinate?: string,\n  //   powerMaxRange?: string,\n  //   powerMinRange?: string,\n  //   beamMaxId?: string,\n  //   beamMinId?: string,\n  //   objectiveIndex?: string,\n  //   threshold?: string,\n  //   obstacleInfo?: string,\n  //   availableNewBsNumber?: string,\n  //   addFixedBsNumber?: string,\n  //   bandwidth?: string,\n  //   Frequency?: string\n  // } = {}) {\n  //     this.sessionid = options.sessionid;\n  //     this.taskName = options.taskName;\n  //     this.mapName = options.mapName;\n  //     this.mapImage = options.mapImage;\n  //     this.createTime = options.createTime;\n  //     this.crossover = options.crossover;\n  //     this.mutation = options.mutation;\n  //     this.iteration = options.iteration;\n  //     this.seed = options.seed;\n  //     this.defaultBs = options.defaultBs;\n  //     this.candidateBs = options.candidateBs;\n  //     this.width = options.width;\n  //     this.height = options.height;\n  //     this.altitude = options.altitude;\n  //     this.zValue = options.zValue;\n  //     this.pathLossModelId = options.pathLossModelId;\n  //     this.ueCoordinate = options.ueCoordinate;\n  //     this.useUeCoordinate = options.useUeCoordinate;\n  //     this.powerMaxRange = options.powerMaxRange;\n  //     this.powerMinRange = options.powerMinRange;\n  //     this.beamMaxId = options.beamMaxId;\n  //     this.beamMinId = options.beamMinId;\n  //     this.objectiveIndex = options.objectiveIndex;\n  //     this.threshold = options.threshold;\n  //     this.obstacleInfo = options.obstacleInfo;\n  //     this.availableNewBsNumber = options.availableNewBsNumber;\n  //     this.addFixedBsNumber = options.addFixedBsNumber;\n  //     this.bandwidth = options.bandwidth;\n  //     this.Frequency = options.Frequency;\n  // }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewPlanningComponent } from './new-planning.component';\n\nconst routes: Routes = [\n  { path: '', component: NewPlanningComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewPlanningRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { TaskFormService } from '../site/task-form.service';\nimport { CalculateForm } from '../form/CalculateForm';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-new-planning',\n  templateUrl: './new-planning.component.html',\n  styleUrls: ['./new-planning.component.scss']\n})\nexport class NewPlanningComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private matDialog: MatDialog,\n    private http: HttpClient,\n    private taskFormService: TaskFormService) {\n      sessionStorage.removeItem('sessionStorage');\n    }\n\n  calculateForm: CalculateForm = new CalculateForm();\n\n  ngOnInit() {\n    this.calculateForm.sessionid = this.authService.userToken;\n  }\n\n  fileChange(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      this.calculateForm.mapImage = reader.result;\n    };\n    this.calculateForm.mapName = file.name;\n  }\n\n  ok() {\n    sessionStorage.setItem('calculateForm', JSON.stringify(this.calculateForm));\n    this.taskFormService.calculateForm = this.calculateForm;\n    this.matDialog.closeAll();\n    this.router.navigate(['/site/site-planning']);\n  }\n\n}\n","<h3>新專案規劃\n  <span class=\"example-button-row\">\n      <button mat-button>載入</button>\n  </span>\n</h3>\n<div class=\"modalContent\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"th\">規劃案名稱</td>\n        <td><input type=\"text\" class=\"w100\" [(ngModel)]=\"calculateForm.taskName\" ></td>\n      </tr>\n      <!--<tr>\n        <td class=\"th\">規劃目標</td>\n        <td>\n          <mat-radio-group aria-label=\"Select an option\">\n            <mat-radio-button value=\"1\">UE 平均 SINR 最大</mat-radio-button>\n            <mat-radio-button value=\"2\">UE 覆蓋範圍最大</mat-radio-button>\n            <mat-radio-button value=\"3\">UE 平均下行 Throughput 最大</mat-radio-button>\n            <mat-radio-button value=\"4\">場域平均 SINR 最大</mat-radio-button>\n            <mat-radio-button value=\"5\">場域覆蓋範圍最大</mat-radio-button>\n          </mat-radio-group>\n        </td>\n      </tr>-->\n      <tr>\n        <td class=\"th\">場域平面圖</td>\n        <td>\n          <input type=\"file\" (change)=\"fileChange($event)\" accept=\"image/jpeg,image/png,image/jpg\" >\n          <span class=\"note\">圖檔限制...</span>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"th\">場域尺寸</td>\n        <td class=\"size\">\n          <span><input type=\"text\" placeholder=\"長\" [(ngModel)]=\"calculateForm.width\" >公尺</span>\n          <span><input type=\"text\" placeholder=\"寬\" [(ngModel)]=\"calculateForm.height\">公尺</span>\n          <span><input type=\"text\" placeholder=\"高\" [(ngModel)]=\"calculateForm.altitude\">公尺</span>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"th\">網路種類</td>\n        <td>\n          <mat-radio-group [(ngModel)]=\"calculateForm.objectiveIndex\" aria-label=\"Select an option\">\n            <mat-radio-button value=\"1\">4G</mat-radio-button>\n            <mat-radio-button value=\"2\">5G</mat-radio-button>\n            <mat-radio-button value=\"3\">Wifi</mat-radio-button>\n          </mat-radio-group>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"modalFooter\">\n    <a href=\"javascript:void(0)\" (click)=\"ok()\">確定</a>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewPlanningComponent } from './new-planning.component';\nimport { RouterModule } from '@angular/router';\nimport { NewPlanningRoutingModule } from './new-planning-routing.module';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    NewPlanningRoutingModule,\n    RouterModule,\n    MatRadioModule\n  ],\n  declarations: [NewPlanningComponent],\n  entryComponents: [NewPlanningComponent],\n  exports: [NewPlanningComponent]\n})\nexport class NewPlanningModule { }\n","import { Injectable } from '@angular/core';\nimport { CalculateForm } from '../form/CalculateForm';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskFormService {\n\n  constructor() { }\n\n  calculateForm: CalculateForm;\n\n}\n"],"sourceRoot":"webpack:///"}