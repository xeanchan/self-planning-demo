{"version":3,"sources":["webpack:///./src/app/form/LoginForm.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACJwC;AACc;AACJ;AAEnD,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc;KACpC,CAAC,CAAC;AAMH;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;ACZ/B,+BAA+B,+BAA+B,4GAA4G,gCAAgC,8JAA8J,6BAA6B,gEAAgE,4BAA4B,S;;;;;;;;;;;ACAje,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AACQ;AACZ;AAO1C;IAEE,wBACS,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAEvB,cAAS,GAAc,IAAI,yDAAS,EAAE,CAAC;QACvC,qBAAqB;QACrB,YAAO,GAAG,KAAK,CAAC;IAJY,CAAC;IAM7B,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAC9D,aAAG;YACD,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,KAAK,WAAW,EAAE;gBACzC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;iBAAM;gBACL,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;QACH,CAAC,EACD,aAAG;YACD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,wCAAe,GAAf,UAAgB,KAAK;QACnB,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,EAAE;YACxB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;IACH,CAAC;IAlCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAIsB,iEAAW;YAChB,sDAAM;OAJZ,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AACM;AAEa;AACT;AACN;AACS;AAWtD;IAAA;IAA2B,CAAC;IAAf,WAAW;QATvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAkB;gBAClB,0DAAW;gBACX,mEAAe;aAChB;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ","file":"login-login-module.js","sourcesContent":["export class LoginForm {\n\n  id: string;\n  key: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [{\n  path: '', component: LoginComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","module.exports = \"\\n\\n<p>\\n  {{ 'login.account' | translate }}<input type=\\\"text\\\" [(ngModel)]=\\\"loginForm.id\\\" (keypress)=\\\"keypressHandler($event)\\\">\\n</p>\\n\\n<p>\\n  {{ 'login.password' | translate }}<input type=\\\"password\\\" [(ngModel)]=\\\"loginForm.key\\\" (keypress)=\\\"keypressHandler($event)\\\">\\n</p>\\n\\n<p>\\n  <button type=\\\"button\\\" (click)=\\\"logon()\\\" >{{ 'login.login' | translate }}</button>\\n</p>\\n\\n<p *ngIf=\\\"showMsg\\\" class=\\\"text-danger\\\">{{ 'login.fail' | translate }}</p>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { LoginForm } from '../form/LoginForm';\nimport { AuthService } from '../service/auth.service';\nimport {  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router,) { }\n\n  loginForm: LoginForm = new LoginForm();\n  // show error message\n  showMsg = false;\n\n  ngOnInit() {\n  }\n\n  logon() {\n    this.authService.logon(JSON.stringify(this.loginForm)).subscribe(\n      res => {\n        if (typeof res['session'] !== 'undefined') {\n          this.showMsg = false;\n          this.authService.setUserToken(res['session']);\n          this.router.navigate(['/']);\n        } else {\n          this.showMsg = true;\n        }\n      },\n      err => {\n        this.showMsg = true;\n      }\n    );\n  }\n\n  keypressHandler(event) {\n    if (event.keyCode === 13) {\n      this.logon();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    TranslateModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class LoginModule { }\n"],"sourceRoot":""}